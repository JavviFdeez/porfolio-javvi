---
import GitHubIcon from "../assets/icons/GitHubIcon.astro";
import LinkedInIcon from "../assets/icons/LinkedInIcon.astro";
import MailIcon from "../assets/icons/MailIcon.astro";
import SocialPill from "./SocialPill.astro";


const navItems = [
    {title: "Experiencia", label: "experiencia", url: "/#experiencia"},
    {title: "Proyectos", label: "proyectos", url: "/#proyectos"},
    {title: "Sobre mí", label: "sobre-mi", url: "/#sobre-mi"},
    {title: "Contacto", label: "contacto", url: "/#contacto"},
]
---

<header class="fixed inset-x-0 top-0 z-50 bg-black/60 backdrop-blur-lg shadow-lg">
    <div class="mx-auto max-w-6xl px-4">
        <div class="relative flex h-14 items-center justify-between">

            <!-- Logo (izquierda) -->
            <a href="/" class="flex items-center">
                <img src="/logo_jv.svg" alt="Logo JV" class="size-15"/>
            </a>

            <!-- Menú (centrado con absolute + translate-x) -->
            <nav class="absolute left-1/2 -translate-x-1/2 hidden md:block">
                <ul class="flex items-center gap-6 md:gap-10 text-sm font-medium text-white/90">
                    {
                        navItems.map((link) => (
                                <li>
                                    <a
                                            href={link.url}
                                            aria-label={link.label}
                                            class="relative transition hover:text-purple-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-purple-400/70 rounded"
                                    >
                                        {link.title}
                                    </a>
                                </li>
                        ))
                    }
                </ul>
            </nav>

            <button
                    id="menu-toggle"
                    class="md:hidden inline-flex items-center justify-center rounded-lg p-2 text-white/90 hover:bg-white/10 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-purple-400/70"
                    aria-label="Abrir menú"
                    aria-controls="mobile-menu"
                    aria-expanded="false"
                    type="button"
            >
                <svg id="icon-open" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" stroke="currentColor">
                    <path stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                </svg>
                <svg id="icon-close" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hidden" fill="none" stroke="currentColor">
                    <path stroke-width="2" d="M6 6l12 12M18 6L6 18"/>
                </svg>
            </button>

            <div class="hidden md:flex fklex-row gap-4">
                <a href="https://github.com/JavviFdeez" aria-label="Perfil de GitHub de Javier Fernández">
                    <GitHubIcon class="size-6 hover:scale-105 hover:text-purple-500"/>
                </a>

                <a href="https://linkedin.com/in/javvifernandez" aria-label="Perfil de LinkedIn de Javier Fernández">
                    <LinkedInIcon class="size-6 hover:scale-105 hover:text-purple-500"/>
                </a>
            </div>


        </div>
    </div>
</header>

<div id="mobile-menu" class="md:hidden fixed inset-x-0 top-14 hidden z-20">
    <div class="absolute inset-0 bg-black/50 backdrop-blur-sm"></div>
    <nav class="relative mx-3 rounded-xl border border-white/10 bg-[#1c1d23]/95 p-4">
        <ul class="flex flex-col divide-y divide-white/10 text-white/90">
            {navItems.map((link) => (
                    <li>
                        <a href={link.url} aria-label={link.label} class="block py-3 px-2 rounded hover:bg-white/5 hover:text-purple-500" data-close-menu>
                            {link.title}
                        </a>
                    </li>
            ))}
        </ul>
    </nav>
</div>


<style>
    nav {
        animation: nav-shadow 1s linear both;
    }


    @keyframes nav-shadow {
        0% {
            border: none;
            box-shadow: none;
        }
        to {
            border: none;

        }
    }
</style>

<script>
    const btn = document.getElementById('menu-toggle');
    const menu = document.getElementById('mobile-menu');
    const icoOpen = document.getElementById('icon-open');
    const icoClose = document.getElementById('icon-close');

    function setState(open) {
        menu.classList.toggle('hidden', !open);
        btn?.setAttribute('aria-expanded', String(open));
        btn?.setAttribute('aria-label', open ? 'Cerrar menú' : 'Abrir menú');
        icoOpen?.classList.toggle('hidden', open);
        icoClose?.classList.toggle('hidden', !open);
        document.documentElement.classList.toggle('overflow-hidden', open); // bloquea scroll al abrir
    }

    btn?.addEventListener('click', () => {
        const open = btn.getAttribute('aria-expanded') !== 'true';
        setState(open);
    });

    menu?.addEventListener('click', (e) => {
        if (e.target.closest('[data-close-menu]')) setState(false);
    });

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') setState(false);
    });
</script>
